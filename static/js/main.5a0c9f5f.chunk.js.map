{"version":3,"sources":["App.js","index.js"],"names":["App","useState","name","setName","lastName","setLastName","age","setAge","job","setJob","salary","setSalary","wizard","setWizard","mode","setMode","finish","setFinish","toaster","setToaster","INITIAL_STATE","id","placeholder","value","set","useEffect","setInterval","className","type","onChange","map","item","e","target","key","length","onClick","ReactDOM","render","document","getElementById"],"mappings":"wJA+FeA,MA3Ff,WAEI,IAFW,EAKYC,mBAAS,IALrB,mBAKJC,EALI,KAKCC,EALD,OAMoBF,mBAAS,IAN7B,mBAMJG,EANI,KAMKC,EANL,OAOUJ,mBAAS,IAPnB,mBAOJK,EAPI,KAOAC,EAPA,OAQUN,mBAAS,IARnB,mBAQJO,EARI,KAQAC,EARA,OASgBR,mBAAS,IATzB,mBASJS,EATI,KASGC,EATH,OAUgBV,mBAAS,GAVzB,mBAUJW,EAVI,KAUGC,EAVH,OAWYZ,oBAAS,GAXrB,mBAWJa,EAXI,KAWCC,EAXD,OAYgBd,oBAAS,GAZzB,mBAYJe,EAZI,KAYGC,EAZH,OAakBhB,oBAAS,GAb3B,mBAaJiB,EAbI,KAaIC,EAbJ,KAeLC,EAAgB,CAClB,CAACC,GAAG,EAAGC,YAAa,aAAaC,MAAOrB,EAAKsB,IAAKrB,GAClD,CAACkB,GAAG,EAAGC,YAAa,YAAYC,MAAOnB,EAASoB,IAAInB,GACpD,CAACgB,GAAG,EAAGC,YAAa,MAAMC,MAAOjB,EAAIkB,IAAKjB,GAC1C,CAACc,GAAG,EAAGC,YAAa,MAAMC,MAAOf,EAAIgB,IAAKf,GAC1C,CAACY,GAAG,EAAGC,YAAa,SAASC,MAAOb,EAAOc,IAAKb,IAmCtD,OANEc,qBAAU,WACNC,aAAY,WACRP,GAAW,KACb,QACJ,CAACA,IAGD,gCACI,sBAAKQ,UAAS,iBAAYb,EAAO,GAAK,OAAxB,YAAkCI,EAAU,QAAS,IAAnE,UACI,wBAAOS,UAAU,SAAjB,UACI,uBAAOC,KAAK,WAAWC,SApClB,WAAOd,GAASD,MAqCrB,sBAAMa,UAAU,eAEpB,qBAAKA,UAAU,cAAf,SACKP,EAAcU,KAAI,SAAAC,GACf,OAAO,8BACFnB,IAAWmB,EAAKV,IACjB,gCACI,uBAAOC,YAAaS,EAAKT,YAAaM,KAAK,OAAOL,MAAOQ,EAAKR,MAAOM,SAAW,SAACG,GAAD,OAAOD,EAAKP,IAAIQ,EAAEC,OAAOV,aAHhGQ,EAAKV,SAS7BL,GAAU,oBAAIW,UAAU,cAAd,SACNP,EAAcU,KAAK,SAACC,EAAKG,GACtB,OAAO,mCAAe,iCAASH,EAAKT,cAA7B,KAAqDS,EAAKR,MAA1D,MAASW,QAGnBtB,EAAS,EAAIQ,EAAce,OAAS,GAAK,sBAAKR,UAAU,iBAAf,UACzCf,EAAS,GAAK,wBAAQwB,QA/CX,WACnBxB,EAAS,GACRC,EAAUD,EAAS,GAEpBQ,EAAce,OAASvB,EAAS,GAC/BK,GAAU,IA0CW,SA7EhB,SA8EEL,EAASQ,EAAce,OAAS,GAAK,wBAAQC,QAxDnC,WAClBxB,EAASQ,EAAce,OAAS,GAAqC,KAAhCf,EAAcR,GAAQW,OAC1DV,EAAUD,EAAS,GAEY,KAAhCQ,EAAcR,GAAQW,OACrBJ,GAAW,IAmDiC,SA7EvC,SA8EEP,EAAS,IAAMQ,EAAce,QAAU,wBAAQC,QAzCrC,WACc,KAAhChB,EAAcR,GAAQW,MACrBJ,GAAW,IAEXN,EAAUD,EAAS,GACnBK,GAAU,KAoCoC,SA7EvC,iBAiFRL,EAASQ,EAAce,QAAW,sBAAKR,UAAS,uBAAkBT,EAAU,SAAW,GAAvC,KAAd,UAA4D,4BAAIE,EAAcR,GAAQU,cAAtF,gCCrF7Ce,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,U","file":"static/js/main.5a0c9f5f.chunk.js","sourcesContent":["import './App.css';\nimport {useEffect, useState} from \"react\";\n\n\nfunction App() {\n\n    const Prev = 'Prev';\n    const Next = 'Next';\n    const Finish = 'Finish';\n    const [name,setName] = useState('');\n    const [lastName,setLastName] = useState('');\n    const [age,setAge] = useState('');\n    const [job,setJob] = useState('');\n    const [salary,setSalary] = useState('');\n    const [wizard,setWizard] = useState(0);\n    const [mode,setMode] = useState(false);\n    const [finish,setFinish] = useState(false);\n    const [toaster,setToaster] = useState(false);\n\n    const INITIAL_STATE = [\n        {id:0, placeholder: \"First Name\",value: name,set: setName},\n        {id:1, placeholder: \"Last Name\",value: lastName,set:setLastName},\n        {id:2, placeholder: \"Age\",value: age,set: setAge},\n        {id:3, placeholder: \"Job\",value: job,set: setJob},\n        {id:4, placeholder: \"Salary\",value: salary,set: setSalary},\n    ]\n\n    const handleMode = () => {setMode(!mode)}\n    const handleWizardPlus = () => {\n        if(wizard < INITIAL_STATE.length - 1 && INITIAL_STATE[wizard].value !== '') {\n            setWizard(wizard + 1);\n        }\n        if(INITIAL_STATE[wizard].value === '') {\n            setToaster(true)\n        }\n    }\n    const handleWizardMinus = () => {\n        if(wizard > 0) {\n            setWizard(wizard - 1);\n        }\n        if(INITIAL_STATE.length < wizard + 1) {\n            setFinish(false)\n        }\n    }\n    const handleFormFinish = () => {\n        if(INITIAL_STATE[wizard].value === '') {\n            setToaster(true)\n        } else {\n            setWizard(wizard + 1);\n            setFinish(true);\n        }\n    }\n\n    useEffect(function () {\n        setInterval(function () {\n            setToaster(false)\n        },2500)\n    },[setToaster])\n\n  return (\n      <div>\n          <div className={`wizard ${mode ? '' : 'dark'} ${toaster ? 'false': ''}`}>\n              <label className=\"switch\">\n                  <input type=\"checkbox\" onChange={handleMode} />\n                  <span className=\" slider\"></span>\n              </label>\n              <div className=\"wizard-foot\">\n                  {INITIAL_STATE.map(item => {\n                      return <div key={item.id}>\n                          {wizard === item.id &&\n                          <label>\n                              <input placeholder={item.placeholder} type=\"text\" value={item.value} onChange={ (e) => item.set(e.target.value) }/>\n                          </label>\n                          }\n                      </div>\n                  })}\n              </div>\n              {finish && <ul className=\"wizard-list\">\n                  {INITIAL_STATE.map( (item,key) => {\n                      return <li key={key}> <strong>{item.placeholder}</strong>: {item.value} </li>\n                  })}\n              </ul>}\n                  {wizard + 1 > INITIAL_STATE.length ? '' : <div className=\"wizard-buttons\">\n                  {wizard > 0 && <button onClick={handleWizardMinus} >{Prev}</button>}\n                  {wizard < INITIAL_STATE.length - 1 && <button onClick={handleWizardPlus}>{Next}</button>}\n                  {wizard + 1 === INITIAL_STATE.length && <button onClick={handleFormFinish}>{Finish}</button>}\n              </div>\n              }\n          </div>\n          {wizard < INITIAL_STATE.length &&  <div className={`wizard-alert ${toaster ? 'active' : ''} `}><b>{INITIAL_STATE[wizard].placeholder}</b> field cannot be blank</div>}\n      </div>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}